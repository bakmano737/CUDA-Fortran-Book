! 
!     Copyright (c) 2017, NVIDIA CORPORATION.  All rights reserved.
!
! NVIDIA CORPORATION and its licensors retain all intellectual property
! and proprietary rights in and to this software, related documentation
! and any modifications thereto.
!
!
!    These example codes are a portion of the code samples from the companion
!    website to the book "CUDA Fortran for Scientists and Engineers":
!
! http://store.elsevier.com/product.jsp?isbn=9780124169708
!

module simpleOps_m
contains
  attributes(global) subroutine increment(a, b)
    implicit none
    integer :: a(:,:)
    integer, value :: b
    integer :: i, j, n(2)

    i = (blockIdx%x-1)*blockDim%x + threadIdx%x
    j = (blockIdx%y-1)*blockDim%y + threadIdx%y
    n(1) = size(a,1)
    n(2) = size(a,2)
    if (i<=n(1) .and. j<=n(2)) a(i,j) = a(i,j) + b
  end subroutine increment
end module simpleOps_m



program incrementTest  
  use cudafor
  use simpleOps_m
  implicit none
  integer, parameter :: nx=1024, ny=512
  integer :: a(nx,ny), b 
  integer, device :: a_d(nx,ny)
  type(dim3) :: grid, tBlock 

  a = 1
  b = 3
  
  tBlock = dim3(32,8,1)
  grid = dim3(ceiling(real(nx)/tBlock%x), &
              ceiling(real(ny)/tBlock%y), 1)
  a_d = a
  call increment<<<grid,tBlock>>>(a_d, b)
  a = a_d

  if (any(a /= 4)) then
     write(*,*) '**** Program Failed ****'
  else
     write(*,*) 'Program Passed'
  endif
end program incrementTest
